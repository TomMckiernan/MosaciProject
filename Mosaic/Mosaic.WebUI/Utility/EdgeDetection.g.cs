// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: EdgeDetection.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from EdgeDetection.proto</summary>
public static partial class EdgeDetectionReflection {

  #region Descriptor
  /// <summary>File descriptor for EdgeDetection.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static EdgeDetectionReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChNFZGdlRGV0ZWN0aW9uLnByb3RvGhRJbWFnZUZpbGVJbmRleC5wcm90byJf",
          "ChRFZGdlRGV0ZWN0aW9uUmVxdWVzdBIKCgJpZBgBIAEoCRIoCgZNYXN0ZXIY",
          "AiABKAsyGC5JbWFnZUZpbGVJbmRleFN0cnVjdHVyZRIRCgl0aHJlc2hvbGQY",
          "AyABKAUiWgoVRWRnZURldGVjdGlvblJlc3BvbnNlEiAKBWVkZ2VzGAEgAygL",
          "MhEuUGl4ZWxDb29yZGluYXRlcxIQCghsb2NhdGlvbhgCIAEoCRINCgVFcnJv",
          "chgDIAEoCSIoChBQaXhlbENvb3JkaW5hdGVzEgkKAXgYASABKAUSCQoBeRgC",
          "IAEoBWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::ImageFileIndexReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::EdgeDetectionRequest), global::EdgeDetectionRequest.Parser, new[]{ "Id", "Master", "Threshold" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EdgeDetectionResponse), global::EdgeDetectionResponse.Parser, new[]{ "Edges", "Location", "Error" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PixelCoordinates), global::PixelCoordinates.Parser, new[]{ "X", "Y" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class EdgeDetectionRequest : pb::IMessage<EdgeDetectionRequest> {
  private static readonly pb::MessageParser<EdgeDetectionRequest> _parser = new pb::MessageParser<EdgeDetectionRequest>(() => new EdgeDetectionRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EdgeDetectionRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EdgeDetectionReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EdgeDetectionRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EdgeDetectionRequest(EdgeDetectionRequest other) : this() {
    id_ = other.id_;
    master_ = other.master_ != null ? other.master_.Clone() : null;
    threshold_ = other.threshold_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EdgeDetectionRequest Clone() {
    return new EdgeDetectionRequest(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Master" field.</summary>
  public const int MasterFieldNumber = 2;
  private global::ImageFileIndexStructure master_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ImageFileIndexStructure Master {
    get { return master_; }
    set {
      master_ = value;
    }
  }

  /// <summary>Field number for the "threshold" field.</summary>
  public const int ThresholdFieldNumber = 3;
  private int threshold_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Threshold {
    get { return threshold_; }
    set {
      threshold_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EdgeDetectionRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EdgeDetectionRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (!object.Equals(Master, other.Master)) return false;
    if (Threshold != other.Threshold) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (master_ != null) hash ^= Master.GetHashCode();
    if (Threshold != 0) hash ^= Threshold.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (master_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Master);
    }
    if (Threshold != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Threshold);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (master_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Master);
    }
    if (Threshold != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Threshold);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EdgeDetectionRequest other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    if (other.master_ != null) {
      if (master_ == null) {
        master_ = new global::ImageFileIndexStructure();
      }
      Master.MergeFrom(other.Master);
    }
    if (other.Threshold != 0) {
      Threshold = other.Threshold;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 18: {
          if (master_ == null) {
            master_ = new global::ImageFileIndexStructure();
          }
          input.ReadMessage(master_);
          break;
        }
        case 24: {
          Threshold = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class EdgeDetectionResponse : pb::IMessage<EdgeDetectionResponse> {
  private static readonly pb::MessageParser<EdgeDetectionResponse> _parser = new pb::MessageParser<EdgeDetectionResponse>(() => new EdgeDetectionResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EdgeDetectionResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EdgeDetectionReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EdgeDetectionResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EdgeDetectionResponse(EdgeDetectionResponse other) : this() {
    edges_ = other.edges_.Clone();
    location_ = other.location_;
    error_ = other.error_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EdgeDetectionResponse Clone() {
    return new EdgeDetectionResponse(this);
  }

  /// <summary>Field number for the "edges" field.</summary>
  public const int EdgesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::PixelCoordinates> _repeated_edges_codec
      = pb::FieldCodec.ForMessage(10, global::PixelCoordinates.Parser);
  private readonly pbc::RepeatedField<global::PixelCoordinates> edges_ = new pbc::RepeatedField<global::PixelCoordinates>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PixelCoordinates> Edges {
    get { return edges_; }
  }

  /// <summary>Field number for the "location" field.</summary>
  public const int LocationFieldNumber = 2;
  private string location_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Location {
    get { return location_; }
    set {
      location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Error" field.</summary>
  public const int ErrorFieldNumber = 3;
  private string error_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Error {
    get { return error_; }
    set {
      error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EdgeDetectionResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EdgeDetectionResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!edges_.Equals(other.edges_)) return false;
    if (Location != other.Location) return false;
    if (Error != other.Error) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= edges_.GetHashCode();
    if (Location.Length != 0) hash ^= Location.GetHashCode();
    if (Error.Length != 0) hash ^= Error.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    edges_.WriteTo(output, _repeated_edges_codec);
    if (Location.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Location);
    }
    if (Error.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Error);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += edges_.CalculateSize(_repeated_edges_codec);
    if (Location.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
    }
    if (Error.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EdgeDetectionResponse other) {
    if (other == null) {
      return;
    }
    edges_.Add(other.edges_);
    if (other.Location.Length != 0) {
      Location = other.Location;
    }
    if (other.Error.Length != 0) {
      Error = other.Error;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          edges_.AddEntriesFrom(input, _repeated_edges_codec);
          break;
        }
        case 18: {
          Location = input.ReadString();
          break;
        }
        case 26: {
          Error = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class PixelCoordinates : pb::IMessage<PixelCoordinates> {
  private static readonly pb::MessageParser<PixelCoordinates> _parser = new pb::MessageParser<PixelCoordinates>(() => new PixelCoordinates());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PixelCoordinates> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EdgeDetectionReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PixelCoordinates() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PixelCoordinates(PixelCoordinates other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PixelCoordinates Clone() {
    return new PixelCoordinates(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private int x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private int y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PixelCoordinates);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PixelCoordinates other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (X != other.X) return false;
    if (Y != other.Y) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0) hash ^= X.GetHashCode();
    if (Y != 0) hash ^= Y.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (X != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Y);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
    }
    if (Y != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PixelCoordinates other) {
    if (other == null) {
      return;
    }
    if (other.X != 0) {
      X = other.X;
    }
    if (other.Y != 0) {
      Y = other.Y;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          X = input.ReadInt32();
          break;
        }
        case 16: {
          Y = input.ReadInt32();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
