// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ImageMosaic.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from ImageMosaic.proto</summary>
public static partial class ImageMosaicReflection {

  #region Descriptor
  /// <summary>File descriptor for ImageMosaic.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ImageMosaicReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChFJbWFnZU1vc2FpYy5wcm90byI3ChJJbWFnZU1vc2FpY1JlcXVlc3QSEAoI",
          "TWFzdGVySWQYASABKAkSDwoHVGlsZUlkcxgCIAMoCSIzChNJbWFnZU1vc2Fp",
          "Y1Jlc3BvbnNlEg0KBUZpbGVzGAEgASgJEg0KBUVycm9yGAIgASgJYgZwcm90",
          "bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::ImageMosaicRequest), global::ImageMosaicRequest.Parser, new[]{ "MasterId", "TileIds" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ImageMosaicResponse), global::ImageMosaicResponse.Parser, new[]{ "Files", "Error" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class ImageMosaicRequest : pb::IMessage<ImageMosaicRequest> {
  private static readonly pb::MessageParser<ImageMosaicRequest> _parser = new pb::MessageParser<ImageMosaicRequest>(() => new ImageMosaicRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ImageMosaicRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ImageMosaicReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ImageMosaicRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ImageMosaicRequest(ImageMosaicRequest other) : this() {
    masterId_ = other.masterId_;
    tileIds_ = other.tileIds_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ImageMosaicRequest Clone() {
    return new ImageMosaicRequest(this);
  }

  /// <summary>Field number for the "MasterId" field.</summary>
  public const int MasterIdFieldNumber = 1;
  private string masterId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MasterId {
    get { return masterId_; }
    set {
      masterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "TileIds" field.</summary>
  public const int TileIdsFieldNumber = 2;
  private static readonly pb::FieldCodec<string> _repeated_tileIds_codec
      = pb::FieldCodec.ForString(18);
  private readonly pbc::RepeatedField<string> tileIds_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> TileIds {
    get { return tileIds_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ImageMosaicRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ImageMosaicRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MasterId != other.MasterId) return false;
    if(!tileIds_.Equals(other.tileIds_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MasterId.Length != 0) hash ^= MasterId.GetHashCode();
    hash ^= tileIds_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MasterId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(MasterId);
    }
    tileIds_.WriteTo(output, _repeated_tileIds_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MasterId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MasterId);
    }
    size += tileIds_.CalculateSize(_repeated_tileIds_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ImageMosaicRequest other) {
    if (other == null) {
      return;
    }
    if (other.MasterId.Length != 0) {
      MasterId = other.MasterId;
    }
    tileIds_.Add(other.tileIds_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          MasterId = input.ReadString();
          break;
        }
        case 18: {
          tileIds_.AddEntriesFrom(input, _repeated_tileIds_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class ImageMosaicResponse : pb::IMessage<ImageMosaicResponse> {
  private static readonly pb::MessageParser<ImageMosaicResponse> _parser = new pb::MessageParser<ImageMosaicResponse>(() => new ImageMosaicResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ImageMosaicResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ImageMosaicReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ImageMosaicResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ImageMosaicResponse(ImageMosaicResponse other) : this() {
    files_ = other.files_;
    error_ = other.error_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ImageMosaicResponse Clone() {
    return new ImageMosaicResponse(this);
  }

  /// <summary>Field number for the "Files" field.</summary>
  public const int FilesFieldNumber = 1;
  private string files_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Files {
    get { return files_; }
    set {
      files_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Error" field.</summary>
  public const int ErrorFieldNumber = 2;
  private string error_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Error {
    get { return error_; }
    set {
      error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ImageMosaicResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ImageMosaicResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Files != other.Files) return false;
    if (Error != other.Error) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Files.Length != 0) hash ^= Files.GetHashCode();
    if (Error.Length != 0) hash ^= Error.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Files.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Files);
    }
    if (Error.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Error);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Files.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Files);
    }
    if (Error.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ImageMosaicResponse other) {
    if (other == null) {
      return;
    }
    if (other.Files.Length != 0) {
      Files = other.Files;
    }
    if (other.Error.Length != 0) {
      Error = other.Error;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Files = input.ReadString();
          break;
        }
        case 18: {
          Error = input.ReadString();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
